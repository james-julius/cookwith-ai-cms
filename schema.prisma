// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  articles  Article[] @relation("Article_author")
  recipes   Recipe[]  @relation("Recipe_author")
  createdAt DateTime? @default(now())
}

model Recipe {
  id                     String                   @id @default(cuid())
  title                  String                   @default("")
  images_filesize        Int?
  images_extension       String?
  images_width           Int?
  images_height          Int?
  images_id              String?
  description            String                   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  nutritionalInformation NutritionalInformation[] @relation("NutritionalInformation_recipe")
  ingredients            Ingredient[]             @relation("Ingredient_recipe")
  collections            Collection[]             @relation("Collection_recipes")
  directions             String                   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author                 User?                    @relation("Recipe_author", fields: [authorId], references: [id])
  authorId               String?                  @map("author")

  @@index([authorId])
}

model Ingredient {
  id               String  @id @default(cuid())
  name             String  @default("")
  quantity         String  @default("")
  unit             String  @default("")
  imperialQuantity String  @default("")
  imperialUnit     String  @default("")
  recipe           Recipe? @relation("Ingredient_recipe", fields: [recipeId], references: [id])
  recipeId         String? @map("recipe")

  @@index([recipeId])
}

model NutritionalInformation {
  id                String  @id @default(cuid())
  calories          String  @default("")
  carbohydrates     String  @default("")
  cholesterol       String  @default("")
  fat               String  @default("")
  protein           String  @default("")
  saturatedFat      String  @default("")
  sodium            String  @default("")
  sugars            String  @default("")
  totalFat          String  @default("")
  totalSaturatedFat String  @default("")
  totalSodium       String  @default("")
  totalSugars       String  @default("")
  totalTransFat     String  @default("")
  recipe            Recipe? @relation("NutritionalInformation_recipe", fields: [recipeId], references: [id])
  recipeId          String? @map("recipe")

  @@index([recipeId])
}

model Collection {
  id          String   @id @default(cuid())
  name        String   @default("")
  description String   @default("")
  recipes     Recipe[] @relation("Collection_recipes")
}

model Article {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Article_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Article_tags")

  @@index([authorId])
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @default("")
  articles Article[] @relation("Article_tags")
}
